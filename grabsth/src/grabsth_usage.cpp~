// this program is just for demo usage of ps9_arm_motion_commander_lib library
// this may not be able to run because of lack of pose data

#include <ros/ros.h>
#include <Eigen/Eigen>
#include <Eigen/Dense>
#include <Eigen/Geometry>
// for motion client, library implementation is copy from example_baxter_cart_move_action client 
#include <grabsth/arm_motion_lib.h>

int main(int argc, char** argv) {
    ros::init(argc, argv, "grabsth_usage");
    ros::NodeHandle nh;

    // instantiate of the class define in ps9_arm_motion_commander_lib
    ArmMotionCommander arm_motion_commander(&nh);

    int rtn_val;
    // in the loop, repeat the cycle of moving to pose A and pose B
    while (ros::ok()) {
        
        around_open_start_pos = beer_pos;

	around_open_start_pos.z = around_open_start_pos.z + beer_height/2;

	std::vector<double> around_open_start_jnts; // the corresponding joint position

	around_open_start_jnts.resize(6);

        rtn_val = arm_motion_commander.rt_arm_plan_path_current_to_goal_pose(rt_tool_pose);
        
        rtn_val = arm_motion_commander.rt_arm_execute_planned_path();

       
    }
    return 0;
}
